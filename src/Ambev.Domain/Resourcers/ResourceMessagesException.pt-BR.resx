<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BOOLEAN" xml:space="preserve">
    <value>O campo deve ser verdadeiro ou falso</value>
  </data>
  <data name="DISCOUNT" xml:space="preserve">
    <value>O desconto deve estar entre 0 e 1</value>
  </data>
  <data name="EMPTY_FIELD" xml:space="preserve">
    <value>O campo não pode ser vazio</value>
  </data>
  <data name="EMPTY_PASSWORD" xml:space="preserve">
    <value>O campo 'Password' é obrigatório</value>
  </data>
  <data name="ERROR_AUTHENTICATION" xml:space="preserve">
    <value>Token inválido</value>
  </data>
  <data name="ERROR_DETAIL_AUTHENTICATION" xml:space="preserve">
    <value>O token expirou ou é inválido</value>
  </data>
  <data name="ERROR_DETAIL_DOMAIN" xml:space="preserve">
    <value>Os seguintes campos possuem erros</value>
  </data>
  <data name="ERROR_DETAIL_ID" xml:space="preserve">
    <value>O ID fornecido na URL não corresponde ao ID do corpo da requisição. ID fornecido:</value>
  </data>
  <data name="ERROR_DETAIL_INTERNAL_SERVER" xml:space="preserve">
    <value>Ocorreu um erro inesperado</value>
  </data>
  <data name="ERROR_DOMAIN" xml:space="preserve">
    <value>Erro de validação no domínio</value>
  </data>
  <data name="ERROR_ID" xml:space="preserve">
    <value>ID inválido</value>
  </data>
  <data name="ERROR_ID_NEW_EXCEPTION" xml:space="preserve">
    <value>Registro com o ID fornecido não encontrado. ID fornecido:</value>
  </data>
  <data name="ERROR_INTERNAL_SERVER" xml:space="preserve">
    <value>Erro interno do servidor</value>
  </data>
  <data name="ERROR_LOGIN" xml:space="preserve">
    <value>Informar o usuário e senha</value>
  </data>
  <data name="ERROR_RESOURCE_NOT_FOUND" xml:space="preserve">
    <value>Recurso não encontrado</value>
  </data>
  <data name="ERROR_TYPE_AUTHENTICATION" xml:space="preserve">
    <value>AuthenticationError</value>
  </data>
  <data name="ERROR_TYPE_BAD_REQUEST" xml:space="preserve">
    <value>Bad Request</value>
  </data>
  <data name="ERROR_TYPE_DOMAIN" xml:space="preserve">
    <value>DomainValidationError</value>
  </data>
  <data name="ERROR_TYPE_INTERNAL_SERVER" xml:space="preserve">
    <value>InternalServerError</value>
  </data>
  <data name="ERROR_TYPE_RESOURCE_NOT_FOUND" xml:space="preserve">
    <value>ResourceNotFound</value>
  </data>
  <data name="INVALID_DATE" xml:space="preserve">
    <value>Informar uma data válida</value>
  </data>
  <data name="INVALID_DISCOUNT_RULE" xml:space="preserve">
    <value>A regra de desconto aplicada é inválida para a quantidade de itens no carrinho</value>
  </data>
  <data name="INVALID_EMAIL" xml:space="preserve">
    <value>Informar um endereço de email válido</value>
  </data>
  <data name="INVALID_FILTER" xml:space="preserve">
    <value>Tipo de filtro inválido ou valor de filtro incompatível</value>
  </data>
  <data name="INVALID_IDENTIFIED" xml:space="preserve">
    <value>Informar um Identificador válido</value>
  </data>
  <data name="INVALID_LOGIN" xml:space="preserve">
    <value>A autenticação não foi validada</value>
  </data>
  <data name="INVALID_NUMBER" xml:space="preserve">
    <value>Forneça um número válido</value>
  </data>
  <data name="LENGTH_ 100" xml:space="preserve">
    <value>Número máximo de caracteres é de 100</value>
  </data>
  <data name="LENGTH_ 15" xml:space="preserve">
    <value>Número máximo de caracteres é de 15</value>
  </data>
  <data name="LENGTH_ 20" xml:space="preserve">
    <value>Número máximo de caracteres é de 20</value>
  </data>
  <data name="LENGTH_ 255" xml:space="preserve">
    <value>Número máximo de caracteres é de 255</value>
  </data>
  <data name="LENGTH_ 50" xml:space="preserve">
    <value>Número máximo de caracteres é de 50</value>
  </data>
  <data name="LENGTH_ 500" xml:space="preserve">
    <value>Número máximo de caracteres é de 500</value>
  </data>
  <data name="NULL_FIELD" xml:space="preserve">
    <value>O campo não pode ser nulo</value>
  </data>
  <data name="NUMBER_GREATER_THAN_ZERO" xml:space="preserve">
    <value>Número deve ser maior que zero</value>
  </data>
  <data name="PASSWORD_LOWERCASE_CHARACTERS" xml:space="preserve">
    <value>A senha deve conter pelo menos uma letra minúscula</value>
  </data>
  <data name="PASSWORD_MAX_LENGTH" xml:space="preserve">
    <value>A senha deve ter no máximo 20 caracteres</value>
  </data>
  <data name="PASSWORD_MIN_LENGTH" xml:space="preserve">
    <value>A senha deve ter no mínimo 8 caracteres</value>
  </data>
  <data name="PASSWORD_NUMBER" xml:space="preserve">
    <value>A senha deve conter pelo menos um número</value>
  </data>
  <data name="PASSWORD_SPECIAL_CHARACTER" xml:space="preserve">
    <value>A senha deve conter pelo menos um caractere especial (!, @, #, etc.)</value>
  </data>
  <data name="PASSWORD_UPPERCASE_CHARACTERS" xml:space="preserve">
    <value>A senha deve conter pelo menos uma letra maiúscula</value>
  </data>
  <data name="QUANTITY_BETWEEN_10 AND_20" xml:space="preserve">
    <value>Compras entre 10 e 20 itens idênticos têm 20% de desconto</value>
  </data>
  <data name="QUANTITY_GREATER_THAN_20" xml:space="preserve">
    <value>Não é possível vender acima de 20 itens idênticos</value>
  </data>
  <data name="QUANTITY_GREATER_THAN_4" xml:space="preserve">
    <value>Compras de 4 itens idênticos ou mais têm 10% de desconto</value>
  </data>
  <data name="QUANTITY_GREATER_THAN_ZERO" xml:space="preserve">
    <value>A quantidade deve ser maior que zero</value>
  </data>
  <data name="QUANTITY_LESS_THAN_4" xml:space="preserve">
    <value>Compras abaixo de 4 itens não possuem desconto</value>
  </data>
  <data name="TYPE_AUTHENTICATION_ERROR" xml:space="preserve">
    <value>AuthenticationError</value>
  </data>
  <data name="TYPE_NOT_FOND" xml:space="preserve">
    <value>ResourceNotFound</value>
  </data>
  <data name="TYPE_VALIDATION_ERROR" xml:space="preserve">
    <value>ValidationError</value>
  </data>
</root>